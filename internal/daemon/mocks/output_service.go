// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/CubicrootXYZ/matrix-reminder-and-calendar-bot/internal/daemon (interfaces: OutputService)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	daemon "github.com/CubicrootXYZ/matrix-reminder-and-calendar-bot/internal/daemon"
	gomock "github.com/golang/mock/gomock"
)

// MockOutputService is a mock of OutputService interface.
type MockOutputService struct {
	ctrl     *gomock.Controller
	recorder *MockOutputServiceMockRecorder
}

// MockOutputServiceMockRecorder is the mock recorder for MockOutputService.
type MockOutputServiceMockRecorder struct {
	mock *MockOutputService
}

// NewMockOutputService creates a new mock instance.
func NewMockOutputService(ctrl *gomock.Controller) *MockOutputService {
	mock := &MockOutputService{ctrl: ctrl}
	mock.recorder = &MockOutputServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOutputService) EXPECT() *MockOutputServiceMockRecorder {
	return m.recorder
}

// SendDailyReminder mocks base method.
func (m *MockOutputService) SendDailyReminder(arg0 *daemon.DailyReminder, arg1 *daemon.Output) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendDailyReminder", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendDailyReminder indicates an expected call of SendDailyReminder.
func (mr *MockOutputServiceMockRecorder) SendDailyReminder(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendDailyReminder", reflect.TypeOf((*MockOutputService)(nil).SendDailyReminder), arg0, arg1)
}

// SendReminder mocks base method.
func (m *MockOutputService) SendReminder(arg0 *daemon.Event, arg1 *daemon.Output) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendReminder", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendReminder indicates an expected call of SendReminder.
func (mr *MockOutputServiceMockRecorder) SendReminder(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendReminder", reflect.TypeOf((*MockOutputService)(nil).SendReminder), arg0, arg1)
}
